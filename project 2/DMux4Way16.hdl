/**
 * DMux4Way16
 */

CHIP DMux4Way16 {
    IN in[16], sel[2];
    OUT a[16], b[16], c[16], d[16];
    
    PARTS:
    DMux4Way(in=in[0], sel=sel, a=a[0], b=b[0], c=c[0], d=d[0]);
    DMux4Way(in=in[1], sel=sel, a=a[1], b=b[1], c=c[1], d=d[1]);
    DMux4Way(in=in[2], sel=sel, a=a[2], b=b[2], c=c[2], d=d[2]);
    DMux4Way(in=in[3], sel=sel, a=a[3], b=b[3], c=c[3], d=d[3]);
    DMux4Way(in=in[4], sel=sel, a=a[4], b=b[4], c=c[4], d=d[4]);
    DMux4Way(in=in[5], sel=sel, a=a[5], b=b[5], c=c[5], d=d[5]);
    DMux4Way(in=in[6], sel=sel, a=a[6], b=b[6], c=c[6], d=d[6]);
    DMux4Way(in=in[7], sel=sel, a=a[7], b=b[7], c=c[7], d=d[7]);
    DMux4Way(in=in[8], sel=sel, a=a[8], b=b[8], c=c[8], d=d[8]);
    DMux4Way(in=in[9], sel=sel, a=a[9], b=b[9], c=c[9], d=d[9]);
    DMux4Way(in=in[10], sel=sel, a=a[10], b=b[10], c=c[10], d=d[10]);
    DMux4Way(in=in[11], sel=sel, a=a[11], b=b[11], c=c[11], d=d[11]);
    DMux4Way(in=in[12], sel=sel, a=a[12], b=b[12], c=c[12], d=d[12]);
    DMux4Way(in=in[13], sel=sel, a=a[13], b=b[13], c=c[13], d=d[13]);
    DMux4Way(in=in[14], sel=sel, a=a[14], b=b[14], c=c[14], d=d[14]);
    DMux4Way(in=in[15], sel=sel, a=a[15], b=b[15], c=c[15], d=d[15]);
}